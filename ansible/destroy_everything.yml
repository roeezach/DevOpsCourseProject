- name: Destroy final project AWS resources safely (correct dependency order)
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - group_vars/env
    - group_vars/final-project.env
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    # ---------- 0) Preflight: הדפסה נחמדה של מה שנמחק (אם מוגדר) ----------
    - name: Show planned deletions (if IDs are defined)
      debug:
        msg:
          - "Region: {{ zone | default('N/A') }}"
          - "VPC: {{ vpc_id | default('N/A') }}"
          - "Subnet: {{ subnet_id | default('N/A') }}"
          - "Route Table: {{ rt_id | default('N/A') }}"
          - "IGW: {{ igw_id | default('N/A') }}"
          - "Security Group: {{ sg_id | default('N/A') }}"
          - "EC2 Instance: {{ server_id | default('N/A') }}"

    # ---------- 1) Terminate EC2 ----------
    - name: Lookup instance (skip if server_id undefined)
      amazon.aws.ec2_instance_info:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
      register: ec2_lookup
      when: server_id is defined
      failed_when: false

    - name: Terminate EC2 instance (if exists)
      amazon.aws.ec2_instance:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
        state: absent
        wait: true
        wait_timeout: 900
      when:
        - server_id is defined
        - ec2_lookup is defined
        - (ec2_lookup.instances | default([])) | length > 0

    - name: Verify instance is terminated (retry until gone)
      amazon.aws.ec2_instance_info:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
      register: ec2_after
      when: server_id is defined
      retries: 10
      delay: 10
      until: (ec2_after.instances | default([])) | length == 0
      failed_when: false

    # ---------- 2) Delete Security Group ----------
    - name: Delete Security Group (if sg_id defined)
      amazon.aws.ec2_group:
        region: "{{ zone }}"
        group_id: "{{ sg_id }}"
        state: absent
      when: sg_id is defined
      failed_when: false

    # ---------- 3) Delete Subnet (נדרש לפני מחיקת ה-RT/IGW/VPC) ----------
    - name: Delete Subnet (if subnet_id defined)
      amazon.aws.ec2_vpc_subnet:
        region: "{{ zone }}"
        subnet_id: "{{ subnet_id }}"
        state: absent
        wait: true
      when: subnet_id is defined
      failed_when: false

    # ---------- 4) Delete Route Table (לא ה-Main) ----------
    - name: Delete Route Table (if rt_id defined)
      amazon.aws.ec2_vpc_route_table:
        region: "{{ zone }}"
        route_table_id: "{{ rt_id }}"
        state: absent
      when: rt_id is defined
      failed_when: false

    # ---------- 5) Detach & Delete Internet Gateway ----------
    - name: Delete Internet Gateway (by ID if provided, else by VPC)
      amazon.aws.ec2_vpc_igw:
        region: "{{ zone }}"
        vpc_id: "{{ vpc_id }}"
        internet_gateway_id: "{{ igw_id | default(omit) }}"
        state: absent
      when: vpc_id is defined
      failed_when: false

    # ---------- 6) Finally, delete the VPC ----------
    - name: Delete VPC (if vpc_id defined)
      amazon.aws.ec2_vpc_net:
        region: "{{ zone }}"
        vpc_id: "{{ vpc_id }}"
        state: absent
      when: vpc_id is defined
      failed_when: false
