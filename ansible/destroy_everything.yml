- name: Destroy final project AWS resources using saved IDs
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - group_vars/env          # מכאן נטען region = zone וכד'
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    # 0) טוענים את קובץ ה-IDs שנכתב בזמן ההקמה
    - name: Load saved IDs from final-project.env (if present)
      include_vars:
        file: group_vars/final-project.env
      register: loaded_final_vars
      failed_when: false
      ignore_errors: true

    - name: Show what will be deleted (only if IDs exist)
      debug:
        msg:
          - "Region: {{ zone }}"
          - "VPC: {{ vpc_id }}"
          - "Subnet: {{ subnet_id }}"
          - "Route Table: {{ rt_id }}"
          - "IGW: {{ igw_id }}"
          - "Security Group: {{ sg_id }}"
          - "EC2 Instance: {{ server_id }}"

    - name: Lookup instance (skip if server_id missing)
      amazon.aws.ec2_instance_info:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
      register: ec2_lookup
      when: server_id is defined
      failed_when: false

    - name: Terminate EC2 instance (if exists)
      amazon.aws.ec2_instance:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
        state: absent
        wait: true
        wait_timeout: 900
      when:
        - server_id is defined
        - (ec2_lookup.instances | default([])) | length > 0
      failed_when: false

    - name: Verify instance is terminated
      amazon.aws.ec2_instance_info:
        region: "{{ zone }}"
        instance_ids: ["{{ server_id }}"]
      register: ec2_after
      when: server_id is defined
      retries: 10
      delay: 10
      until: (ec2_after.instances | default([])) | length == 0
      failed_when: false

    - name: Delete Security Group
      amazon.aws.ec2_group:
        region: "{{ zone }}"
        group_id: "{{ sg_id }}"
        state: absent
      when: sg_id is defined
      failed_when: false

    - name: Delete Subnet
      amazon.aws.ec2_vpc_subnet:
        region: "{{ zone }}"
        subnet_id: "{{ subnet_id }}"
        state: absent
        wait: true
      when: subnet_id is defined
      failed_when: false

    - name: Delete Route Table
      amazon.aws.ec2_vpc_route_table:
        region: "{{ zone }}"
        route_table_id: "{{ rt_id }}"
        state: absent
      when: rt_id is defined
      failed_when: false

    - name: Delete Internet Gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ zone }}"
        vpc_id: "{{ vpc_id }}"
        internet_gateway_id: "{{ igw_id | default(omit) }}"
        state: absent
      when: vpc_id is defined
      failed_when: false

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        region: "{{ zone }}"
        vpc_id: "{{ vpc_id }}"
        state: absent
      when: vpc_id is defined
      failed_when: false
